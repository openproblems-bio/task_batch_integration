import anndata as ad
import sys
import pegasus as pg

## VIASH START
# Note: this section is auto-generated by viash at runtime. To edit it, make changes
# in config.vsh.yaml and then run `viash config inject config.vsh.yaml`.
par = {
  'input_integrated': 'resources_test/task_batch_integration/cxg_immune_cell_atlas/integrated_full.h5ad',
  'input_solution': 'resources_test/.../solution.h5ad',
  'output': 'output.h5ad',
  "rep": "pca",
  "K": 24,
  "min_rate": 0.9,
  "n_jobs": -1,
  "random_state": 0,
  "use_cache": True
}
meta = {
  'name': 'ksim'
}
## VIASH END

sys.path.append(meta["resources_dir"])
from read_anndata_partial import read_anndata

print('Reading input files', flush=True)
adata = read_anndata(par['input_integrated'], obs='obs', obsm='obsm', uns='uns')
adata.obs = read_anndata(par['input_solution'], obs='obs').obs
adata.uns |= read_anndata(par['input_solution'], uns='uns').uns

print('Compute metrics', flush=True)
score = pg.calc_kSIM(
    adata,
    attr='cell_type',
    rep=par["rep"],
    K=par["K"],
    min_rate=par["min_rate"],
    n_jobs=par["n_jobs"],
    random_state=par["random_state"],
    use_cache=par["use_cache"]
)[1]

# TODO RETURNS A TOUPLE OF TWO THINGS: kSIM_mean (float) – Mean kSIM rate over all the cells., kSIM_accept_rate (float) – kSIM Acceptance rate of the sample

print('Create output AnnData object', flush=True)
output = ad.AnnData(
    uns={
        'dataset_id': adata.uns['dataset_id'],
        'normalization_id': adata.uns['normalization_id'],
        'method_id': adata.uns['method_id'],
        'metric_ids': [ meta['name'] ],
        'metric_values': [ score ]
    }
)

print("Write output AnnData to file", flush=True)
output.write_h5ad(par['output'], compression='gzip')
