name: "scanvi"
namespace: "methods"
version: "build_main"
argument_groups:
- name: "Arguments"
  arguments:
  - type: "file"
    name: "--input"
    label: "Dataset"
    summary: "Unintegrated AnnData HDF5 file."
    info:
      format:
        type: "h5ad"
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized expression values"
          required: true
        obs:
        - type: "string"
          name: "cell_type"
          description: "Cell type information"
          required: true
        - type: "string"
          name: "batch"
          description: "Batch information"
          required: true
        var:
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'"
          required: true
        - type: "double"
          name: "hvg_score"
          description: "A ranking of the features by hvg."
          required: true
        - type: "string"
          name: "feature_name"
          description: "A human-readable name for the feature, usually a gene symbol."
          required: true
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        obsp:
        - type: "double"
          name: "knn_distances"
          description: "K nearest neighbors distance matrix."
          required: true
        - type: "double"
          name: "knn_connectivities"
          description: "K nearest neighbors connectivities matrix."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - name: "dataset_organism"
          type: "string"
          description: "The organism of the sample in the dataset."
          required: false
        - type: "object"
          name: "knn"
          description: "Supplementary K nearest neighbors data."
          required: true
    example:
    - "resources_test/task_batch_integration/cxg_immune_cell_atlas/dataset.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--output"
    label: "Integration"
    summary: "An integrated AnnData dataset."
    description: "Must contain at least one of:\n\n  - Feature: the corrected_counts\
      \ layer\n  - Embedding: the X_emb obsm\n  - Graph: the connectivities and distances\
      \ obsp\n"
    info:
      format:
        type: "h5ad"
        layers:
        - type: "double"
          name: "corrected_counts"
          description: "Feature output - corrected counts"
          required: false
        obsm:
        - type: "double"
          name: "X_emb"
          description: "Embedding output - 2D coordinate matrix"
          required: false
        obsp:
        - type: "double"
          name: "connectivities"
          description: "Graph output - neighbor connectivities matrix"
          required: false
        - type: "double"
          name: "distances"
          description: "Graph output - neighbor distances matrix"
          required: false
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - name: "dataset_organism"
          type: "string"
          description: "The organism of the sample in the dataset."
          required: false
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
          required: true
        - type: "object"
          name: "neighbors"
          description: "Supplementary K nearest neighbors data."
          required: false
    example:
    - "resources_test/task_batch_integration/cxg_immune_cell_atlas/integrated.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--n_hvg"
    description: "Number of highly variable genes to use."
    info: null
    default:
    - 2000
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--n_latent"
    description: "Number of latent dimensions."
    info: null
    default:
    - 30
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--n_hidden"
    description: "Number of hidden units."
    info: null
    default:
    - 128
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--n_layers"
    description: "Number of layers."
    info: null
    default:
    - 2
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--max_epochs_scvi"
    description: "Maximum number of training epochs for scVI."
    info: null
    example:
    - 400
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--max_epochs_scanvi"
    description: "Maximum number of training epochs for scANVI."
    info: null
    example:
    - 10
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
resources:
- type: "python_script"
  path: "script.py"
  is_executable: true
- type: "file"
  path: "read_anndata_partial.py"
label: "scANVI"
summary: "scANVI is a deep learning method that considers cell type labels."
description: "scANVI (single-cell ANnotation using Variational Inference; Python class\
  \ SCANVI) is a semi-supervised model for single-cell transcriptomics data. In a\
  \ sense, it can be seen as a scVI extension that can leverage the cell type knowledge\
  \ for a subset of the cells present in the data sets to infer the states of the\
  \ rest of the cells.\n"
test_resources:
- type: "python_script"
  path: "check_config.py"
  is_executable: true
- type: "python_script"
  path: "run_and_check_output.py"
  is_executable: true
- type: "file"
  path: "resources_test/task_batch_integration/cxg_immune_cell_atlas"
  dest: "resources_test/task_batch_integration/cxg_immune_cell_atlas"
info:
  method_types:
  - "embedding"
  preferred_normalization: "counts"
  type: "method"
  type_info:
    label: "Method"
    summary: "A method for the batch integration task."
    description: "A batch integration method which integrates multiple datasets.\n"
status: "enabled"
repositories:
- type: "github"
  name: "openproblems"
  repo: "openproblems-bio/openproblems"
  tag: "build/main"
license: "MIT"
references:
  doi:
  - "10.1038/s41592-018-0229-2"
links:
  repository: "https://github.com/scverse/scvi-tools"
  docker_registry: "ghcr.io"
  documentation: "https://docs.scvi-tools.org/en/stable/user_guide/models/scanvi.html"
runners:
- type: "executable"
  id: "executable"
  docker_setup_strategy: "ifneedbepullelsecachedbuild"
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "midtime"
    - "lowmem"
    - "lowcpu"
    - "gpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      lowmem: "memory = 20.Gb"
      midmem: "memory = 50.Gb"
      highmem: "memory = 100.Gb"
      lowcpu: "cpus = 5"
      midcpu: "cpus = 15"
      highcpu: "cpus = 30"
      lowtime: "time = 1.h"
      midtime: "time = 4.h"
      hightime: "time = 8.h"
      veryhightime: "time = 24.h"
  debug: false
  container: "docker"
engines:
- type: "docker"
  id: "docker"
  image: "openproblems/base_pytorch_nvidia:1.0.0"
  namespace_separator: "/"
  setup:
  - type: "python"
    user: false
    pypi:
    - "scvi-tools>=1.1.0"
    upgrade: true
  entrypoint: []
  cmd: null
build_info:
  config: "src/methods/scanvi/config.vsh.yaml"
  runner: "nextflow"
  engine: "docker"
  output: "target/nextflow/methods/scanvi"
  executable: "target/nextflow/methods/scanvi/main.nf"
  viash_version: "0.9.0"
  git_commit: "52ccedbd0221be2af27c3e9dd584a7ae63e8a0a1"
  git_remote: "https://github.com/openproblems-bio/task_batch_integration"
package_config:
  name: "task_batch_integration"
  version: "build_main"
  label: "Batch Integration"
  summary: "Remove unwanted batch effects from scRNA-seq data while retaining biologically\
    \ meaningful variation."
  description: "As single-cell technologies advance, single-cell datasets are growing\
    \ both in size and complexity.\nEspecially in consortia such as the Human Cell\
    \ Atlas, individual studies combine data from multiple labs, each sequencing multiple\
    \ individuals possibly with different technologies.\nThis gives rise to complex\
    \ batch effects in the data that must be computationally removed to perform a\
    \ joint analysis.\nThese batch integration methods must remove the batch effect\
    \ while not removing relevant biological information.\nCurrently, over 200 tools\
    \ exist that aim to remove batch effects scRNA-seq datasets [@zappia2018exploring].\n\
    These methods balance the removal of batch effects with the conservation of nuanced\
    \ biological information in different ways.\nThis abundance of tools has complicated\
    \ batch integration method choice, leading to several benchmarks on this topic\
    \ [@luecken2020benchmarking; @tran2020benchmark; @chazarragil2021flexible; @mereu2020benchmarking].\n\
    Yet, benchmarks use different metrics, method implementations and datasets. Here\
    \ we build a living benchmarking task for batch integration methods with the vision\
    \ of improving the consistency of method evaluation.\n\nIn this task we evaluate\
    \ batch integration methods on their ability to remove batch effects in the data\
    \ while conserving variation attributed to biological effects.\nAs input, methods\
    \ require either normalised or unnormalised data with multiple batches and consistent\
    \ cell type labels.\nThe batch integrated output can be a feature matrix, a low\
    \ dimensional embedding and/or a neighbourhood graph.\nThe respective batch-integrated\
    \ representation is then evaluated using sets of metrics that capture how well\
    \ batch effects are removed and whether biological variance is conserved.\nWe\
    \ have based this particular task on the latest, and most extensive benchmark\
    \ of single-cell data integration methods.\n"
  info:
    image: "thumbnail.svg"
    test_resources:
    - type: "s3"
      path: "s3://openproblems-data/resources_test/common/cxg_immune_cell_atlas/"
      dest: "resources_test/common/cxg_immune_cell_atlas"
    - type: "s3"
      path: "s3://openproblems-data/resources_test/task_batch_integration/"
      dest: "resources_test/task_batch_integration"
  repositories:
  - type: "github"
    name: "openproblems"
    repo: "openproblems-bio/openproblems"
    tag: "build/main"
  viash_version: "0.9.0"
  source: "src"
  target: "target"
  config_mods:
  - ".runners[.type == \"nextflow\"].config.labels := { lowmem : \"memory = 20.Gb\"\
    , midmem : \"memory = 50.Gb\", highmem : \"memory = 100.Gb\", lowcpu : \"cpus\
    \ = 5\", midcpu : \"cpus = 15\", highcpu : \"cpus = 30\", lowtime : \"time = 1.h\"\
    , midtime : \"time = 4.h\", hightime : \"time = 8.h\", veryhightime : \"time =\
    \ 24.h\" }\n"
  authors:
  - name: "Michaela Mueller"
    roles:
    - "maintainer"
    - "author"
    info:
      github: "mumichae"
      orcid: "0000-0002-1401-1785"
  - name: "Malte Luecken"
    roles:
    - "author"
    info:
      github: "LuckyMD"
      orcid: "0000-0001-7464-7921"
  - name: "Daniel Strobl"
    roles:
    - "author"
    info:
      github: "danielStrobl"
      orcid: "0000-0002-5516-7057"
  - name: "Robrecht Cannoodt"
    roles:
    - "contributor"
    info:
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
  - name: "Scott Gigante"
    roles:
    - "contributor"
    info:
      github: "scottgigante"
      orcid: "0000-0002-4544-2764"
  - name: "Kai Waldrant"
    roles:
    - "contributor"
    info:
      github: "KaiWaldrant"
      orcid: "0009-0003-8555-1361"
  - name: "Nartin Kim"
    roles:
    - "contributor"
    info:
      github: "martinkim0"
      orcid: "0009-0003-8555-1361"
  keywords:
  - "batch integration"
  - "scRNA-seq"
  license: "MIT"
  organization: "openproblems-bio"
  references:
    doi:
    - "10.1038/s41592-021-01336-8"
  links:
    repository: "https://github.com/openproblems-bio/task_batch_integration"
    docker_registry: "ghcr.io"
    issue_tracker: "https://github.com/openproblems-bio/task_batch_integration/issues"
