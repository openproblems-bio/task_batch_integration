name: "cell_cycle_conservation"
namespace: "metrics"
version: "build_main"
argument_groups:
- name: "Arguments"
  arguments:
  - type: "file"
    name: "--input_integrated"
    label: "Processed integration output"
    summary: "An integrated AnnData dataset with additional outputs."
    description: "Must contain at least one of:\n\n  - Feature: the corrected_counts\
      \ layer\n  - Embedding: the X_emb obsm\n  - Graph: the connectivities and distances\
      \ obsp\n\nThe Graph should always be present, but the Feature and Embedding\
      \ are optional.\n"
    info:
      format:
        type: "h5ad"
        layers:
        - type: "double"
          name: "corrected_counts"
          description: "Feature output - corrected counts"
          required: false
        obsm:
        - type: "double"
          name: "X_emb"
          description: "Embedding output - 2D coordinate matrix"
          required: false
        - type: "integer"
          name: "clustering"
          description: "Leiden clustering results at different resolutions."
          required: true
        obsp:
        - type: "double"
          name: "connectivities"
          description: "Graph output - neighbor connectivities matrix"
          required: true
        - type: "double"
          name: "distances"
          description: "Graph output - neighbor distances matrix"
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - name: "dataset_organism"
          type: "string"
          description: "The organism of the sample in the dataset."
          required: false
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
          required: true
        - type: "object"
          name: "neighbors"
          description: "Supplementary K nearest neighbors data."
          required: true
    example:
    - "resources_test/task_batch_integration/cxg_immune_cell_atlas/integrated_processed.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--input_solution"
    label: "Solution"
    summary: "Uncensored dataset containing the true labels."
    info:
      format:
        type: "h5ad"
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized expression values"
          required: true
        obs:
        - type: "string"
          name: "cell_type"
          description: "Cell type information"
          required: true
        - type: "string"
          name: "batch"
          description: "Batch information"
          required: true
        var:
        - type: "string"
          name: "feature_name"
          description: "A human-readable name for the feature, usually a gene symbol."
          required: true
        - type: "string"
          name: "feature_id"
          description: "A database identifier for the feature, usually an ENSEMBL\
            \ ID."
          required: true
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'."
          required: true
        - type: "double"
          name: "hvg_score"
          description: "A ranking of the features by hvg."
          required: true
        - type: "boolean"
          name: "batch_hvg"
          description: "Whether or not the feature is considered to be a batch-aware\
            \ 'highly variable gene'."
          required: true
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        obsp:
        - type: "double"
          name: "knn_distances"
          description: "K nearest neighbors distance matrix."
          required: true
        - type: "double"
          name: "knn_connectivities"
          description: "K nearest neighbors connectivities matrix."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - name: "dataset_name"
          type: "string"
          description: "Nicely formatted name."
          required: true
        - type: "string"
          name: "dataset_url"
          description: "Link to the original source of the dataset."
          required: false
        - name: "dataset_reference"
          type: "string"
          description: "Bibtex reference of the paper in which the dataset was published."
          required: false
        - name: "dataset_summary"
          type: "string"
          description: "Short description of the dataset."
          required: true
        - name: "dataset_description"
          type: "string"
          description: "Long description of the dataset."
          required: true
        - name: "dataset_organism"
          type: "string"
          description: "The organism of the sample in the dataset."
          required: false
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - type: "object"
          name: "knn"
          description: "Supplementary K nearest neighbors data."
          required: true
    example:
    - "resources_test/task_batch_integration/cxg_immune_cell_atlas/solution.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--output"
    label: "Score"
    summary: "Metric score file"
    info:
      format:
        type: "h5ad"
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
          required: true
        - type: "string"
          name: "metric_ids"
          description: "One or more unique metric identifiers"
          multiple: true
          required: true
        - type: "double"
          name: "metric_values"
          description: "The metric values obtained for the given prediction. Must\
            \ be of same length as 'metric_ids'."
          multiple: true
          required: true
    example:
    - "score.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ";"
resources:
- type: "python_script"
  path: "script.py"
  is_executable: true
- type: "file"
  path: "read_anndata_partial.py"
test_resources:
- type: "python_script"
  path: "check_config.py"
  is_executable: true
- type: "python_script"
  path: "run_and_check_output.py"
  is_executable: true
- type: "file"
  path: "resources_test/task_batch_integration/cxg_immune_cell_atlas"
  dest: "resources_test/task_batch_integration/cxg_immune_cell_atlas"
info:
  metric_type: "embedding"
  metrics:
  - name: "cell_cycle_conservation"
    label: "Cell Cycle Conservation"
    summary: "Cell cycle conservation score based on principle component regression\
      \ on cell cycle gene scores"
    description: "The cell-cycle conservation score evaluates how well the cell-cycle\
      \ effect can be\ncaptured before and after integration. We computed cell-cycle\
      \ scores using Scanpy's\nscore_cell_cycle function with a reference gene set\
      \ from Tirosh et al for the\nrespective cell-cycle phases. We used the same\
      \ set of cell-cycle genes for mouse and\nhuman data (using capitalization to\
      \ convert between the gene symbols). We then computed\nthe variance contribution\
      \ of the resulting S and G2/M phase scores using principal\ncomponent regression\
      \ (Principal component regression), which was performed for each\nbatch separately.\
      \ The differences in variance before, Varbefore, and after, Varafter,\nintegration\
      \ were aggregated into a final score between 0 and 1, using the equation:\n\
      CCconservation=1−|Varafter−Varbefore|/Varbefore.\n\nIn this equation, values\
      \ close to 0 indicate lower conservation and 1 indicates complete\nconservation\
      \ of the variance explained by cell cycle. In other words, the variance\nremains\
      \ unchanged within each batch for complete conservation, while any deviation\
      \ from\nthe preintegration variance contribution reduces the score.\n"
    references:
      doi: "10.1038/s41592-021-01336-8"
    links:
      homepage: "https://scib.readthedocs.io/en/latest/"
      documentation: "https://scib.readthedocs.io/en/latest/api/scib.metrics.cell_cycle.html"
      repository: "https://github.com/theislab/scib"
    min: 0
    max: 1
    maximize: true
  type: "metric"
  type_info:
    label: "Metric"
    summary: "A metric for evaluating batch integration methods."
    description: "A metric for evaluating batch integration methods.\n"
status: "enabled"
repositories:
- type: "github"
  name: "openproblems"
  repo: "openproblems-bio/openproblems"
  tag: "build/main"
license: "MIT"
links:
  repository: "https://github.com/openproblems-bio/task_batch_integration"
  docker_registry: "ghcr.io"
runners:
- type: "executable"
  id: "executable"
  docker_setup_strategy: "ifneedbepullelsecachedbuild"
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "midtime"
    - "midmem"
    - "lowcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      lowmem: "memory = 20.Gb"
      midmem: "memory = 50.Gb"
      highmem: "memory = 100.Gb"
      lowcpu: "cpus = 5"
      midcpu: "cpus = 15"
      highcpu: "cpus = 30"
      lowtime: "time = 1.h"
      midtime: "time = 4.h"
      hightime: "time = 8.h"
      veryhightime: "time = 24.h"
  debug: false
  container: "docker"
engines:
- type: "docker"
  id: "docker"
  image: "openproblems/base_python:1.0.0"
  namespace_separator: "/"
  setup:
  - type: "python"
    user: false
    pypi:
    - "scib==1.1.7"
    upgrade: true
  entrypoint: []
  cmd: null
build_info:
  config: "src/metrics/cell_cycle_conservation/config.vsh.yaml"
  runner: "executable"
  engine: "docker"
  output: "target/executable/metrics/cell_cycle_conservation"
  executable: "target/executable/metrics/cell_cycle_conservation/cell_cycle_conservation"
  viash_version: "0.9.0"
  git_commit: "624d849a5d2912e516f47e31d53ebb2905dcead3"
  git_remote: "https://github.com/openproblems-bio/task_batch_integration"
package_config:
  name: "task_batch_integration"
  version: "build_main"
  label: "Batch Integration"
  summary: "Remove unwanted batch effects from scRNA-seq data while retaining biologically\
    \ meaningful variation."
  description: "As single-cell technologies advance, single-cell datasets are growing\
    \ both in size and complexity.\nEspecially in consortia such as the Human Cell\
    \ Atlas, individual studies combine data from multiple labs, each sequencing multiple\
    \ individuals possibly with different technologies.\nThis gives rise to complex\
    \ batch effects in the data that must be computationally removed to perform a\
    \ joint analysis.\nThese batch integration methods must remove the batch effect\
    \ while not removing relevant biological information.\nCurrently, over 200 tools\
    \ exist that aim to remove batch effects scRNA-seq datasets [@zappia2018exploring].\n\
    These methods balance the removal of batch effects with the conservation of nuanced\
    \ biological information in different ways.\nThis abundance of tools has complicated\
    \ batch integration method choice, leading to several benchmarks on this topic\
    \ [@luecken2020benchmarking; @tran2020benchmark; @chazarragil2021flexible; @mereu2020benchmarking].\n\
    Yet, benchmarks use different metrics, method implementations and datasets. Here\
    \ we build a living benchmarking task for batch integration methods with the vision\
    \ of improving the consistency of method evaluation.\n\nIn this task we evaluate\
    \ batch integration methods on their ability to remove batch effects in the data\
    \ while conserving variation attributed to biological effects.\nAs input, methods\
    \ require either normalised or unnormalised data with multiple batches and consistent\
    \ cell type labels.\nThe batch integrated output can be a feature matrix, a low\
    \ dimensional embedding and/or a neighbourhood graph.\nThe respective batch-integrated\
    \ representation is then evaluated using sets of metrics that capture how well\
    \ batch effects are removed and whether biological variance is conserved.\nWe\
    \ have based this particular task on the latest, and most extensive benchmark\
    \ of single-cell data integration methods.\n"
  info:
    image: "thumbnail.svg"
    test_resources:
    - type: "s3"
      path: "s3://openproblems-data/resources_test/common/cxg_immune_cell_atlas/"
      dest: "resources_test/common/cxg_immune_cell_atlas"
    - type: "s3"
      path: "s3://openproblems-data/resources_test/task_batch_integration/"
      dest: "resources_test/task_batch_integration"
  repositories:
  - type: "github"
    name: "openproblems"
    repo: "openproblems-bio/openproblems"
    tag: "build/main"
  viash_version: "0.9.0"
  source: "src"
  target: "target"
  config_mods:
  - ".runners[.type == \"nextflow\"].config.labels := { lowmem : \"memory = 20.Gb\"\
    , midmem : \"memory = 50.Gb\", highmem : \"memory = 100.Gb\", lowcpu : \"cpus\
    \ = 5\", midcpu : \"cpus = 15\", highcpu : \"cpus = 30\", lowtime : \"time = 1.h\"\
    , midtime : \"time = 4.h\", hightime : \"time = 8.h\", veryhightime : \"time =\
    \ 24.h\" }\n"
  authors:
  - name: "Michaela Mueller"
    roles:
    - "maintainer"
    - "author"
    info:
      github: "mumichae"
      orcid: "0000-0002-1401-1785"
  - name: "Malte Luecken"
    roles:
    - "author"
    info:
      github: "LuckyMD"
      orcid: "0000-0001-7464-7921"
  - name: "Daniel Strobl"
    roles:
    - "author"
    info:
      github: "danielStrobl"
      orcid: "0000-0002-5516-7057"
  - name: "Robrecht Cannoodt"
    roles:
    - "contributor"
    info:
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
  - name: "Scott Gigante"
    roles:
    - "contributor"
    info:
      github: "scottgigante"
      orcid: "0000-0002-4544-2764"
  - name: "Kai Waldrant"
    roles:
    - "contributor"
    info:
      github: "KaiWaldrant"
      orcid: "0009-0003-8555-1361"
  - name: "Nartin Kim"
    roles:
    - "contributor"
    info:
      github: "martinkim0"
      orcid: "0009-0003-8555-1361"
  keywords:
  - "batch integration"
  - "scRNA-seq"
  license: "MIT"
  organization: "openproblems-bio"
  references:
    doi:
    - "10.1038/s41592-021-01336-8"
  links:
    repository: "https://github.com/openproblems-bio/task_batch_integration"
    docker_registry: "ghcr.io"
    issue_tracker: "https://github.com/openproblems-bio/task_batch_integration/issues"
