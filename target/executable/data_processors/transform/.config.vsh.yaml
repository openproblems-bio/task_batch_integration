name: "transform"
namespace: "data_processors"
version: "build_main"
argument_groups:
- name: "Arguments"
  arguments:
  - type: "file"
    name: "--input_integrated"
    info: null
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--input_dataset"
    info: null
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--expected_method_types"
    description: "The expected output types of the batch integration method.\n"
    info: null
    required: true
    choices:
    - "feature"
    - "embedding"
    - "graph"
    direction: "input"
    multiple: true
    multiple_sep: ";"
  - type: "file"
    name: "--output"
    info: null
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ";"
resources:
- type: "python_script"
  path: "script.py"
  is_executable: true
label: "Transform"
summary: "Check the output and transform to create additional output types"
description: "This component will:\n\n  - Assert whether the input dataset and integrated\
  \ dataset have the same shape.\n  - Reorder the integrated dataset to match the\
  \ input dataset if needed.\n  - Transform the corrected feature output to an embedding.\n\
  \  - Transform an embedding to a graph output.\n"
info:
  test_setup:
    default:
      expected_method_types: "feature"
status: "enabled"
repositories:
- type: "github"
  name: "openproblems"
  repo: "openproblems-bio/openproblems"
  tag: "build/main"
license: "MIT"
links:
  repository: "https://github.com/openproblems-bio/task_batch_integration"
  docker_registry: "ghcr.io"
runners:
- type: "executable"
  id: "executable"
  docker_setup_strategy: "ifneedbepullelsecachedbuild"
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "midtime"
    - "midmem"
    - "lowcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      lowmem: "memory = 20.Gb"
      midmem: "memory = 50.Gb"
      highmem: "memory = 100.Gb"
      lowcpu: "cpus = 5"
      midcpu: "cpus = 15"
      highcpu: "cpus = 30"
      lowtime: "time = 1.h"
      midtime: "time = 4.h"
      hightime: "time = 8.h"
      veryhightime: "time = 24.h"
  debug: false
  container: "docker"
engines:
- type: "docker"
  id: "docker"
  image: "openproblems/base_python:1.0.0"
  namespace_separator: "/"
  setup:
  - type: "python"
    user: false
    pypi:
    - "scanpy"
    upgrade: true
  entrypoint: []
  cmd: null
build_info:
  config: "src/data_processors/transform/config.vsh.yaml"
  runner: "executable"
  engine: "docker"
  output: "target/executable/data_processors/transform"
  executable: "target/executable/data_processors/transform/transform"
  viash_version: "0.9.0"
  git_commit: "4b67f90a253b15ac0163f7890bc4903f544c716d"
  git_remote: "https://github.com/openproblems-bio/task_batch_integration"
package_config:
  name: "task_batch_integration"
  version: "build_main"
  label: "Batch Integration"
  summary: "Remove unwanted batch effects from scRNA-seq data while retaining biologically\
    \ meaningful variation."
  description: "As single-cell technologies advance, single-cell datasets are growing\
    \ both in size and complexity.\nEspecially in consortia such as the Human Cell\
    \ Atlas, individual studies combine data from multiple labs, each sequencing multiple\
    \ individuals possibly with different technologies.\nThis gives rise to complex\
    \ batch effects in the data that must be computationally removed to perform a\
    \ joint analysis.\nThese batch integration methods must remove the batch effect\
    \ while not removing relevant biological information.\nCurrently, over 200 tools\
    \ exist that aim to remove batch effects scRNA-seq datasets [@zappia2018exploring].\n\
    These methods balance the removal of batch effects with the conservation of nuanced\
    \ biological information in different ways.\nThis abundance of tools has complicated\
    \ batch integration method choice, leading to several benchmarks on this topic\
    \ [@luecken2020benchmarking; @tran2020benchmark; @chazarragil2021flexible; @mereu2020benchmarking].\n\
    Yet, benchmarks use different metrics, method implementations and datasets. Here\
    \ we build a living benchmarking task for batch integration methods with the vision\
    \ of improving the consistency of method evaluation.\n\nIn this task we evaluate\
    \ batch integration methods on their ability to remove batch effects in the data\
    \ while conserving variation attributed to biological effects.\nAs input, methods\
    \ require either normalised or unnormalised data with multiple batches and consistent\
    \ cell type labels.\nThe batch integrated output can be a feature matrix, a low\
    \ dimensional embedding and/or a neighbourhood graph.\nThe respective batch-integrated\
    \ representation is then evaluated using sets of metrics that capture how well\
    \ batch effects are removed and whether biological variance is conserved.\nWe\
    \ have based this particular task on the latest, and most extensive benchmark\
    \ of single-cell data integration methods.\n"
  info:
    image: "thumbnail.svg"
    test_resources:
    - type: "s3"
      path: "s3://openproblems-data/resources_test/common/cxg_immune_cell_atlas/"
      dest: "resources_test/common/cxg_immune_cell_atlas"
    - type: "s3"
      path: "s3://openproblems-data/resources_test/task_batch_integration/"
      dest: "resources_test/task_batch_integration"
  repositories:
  - type: "github"
    name: "openproblems"
    repo: "openproblems-bio/openproblems"
    tag: "build/main"
  viash_version: "0.9.0"
  source: "src"
  target: "target"
  config_mods:
  - ".runners[.type == \"nextflow\"].config.labels := { lowmem : \"memory = 20.Gb\"\
    , midmem : \"memory = 50.Gb\", highmem : \"memory = 100.Gb\", lowcpu : \"cpus\
    \ = 5\", midcpu : \"cpus = 15\", highcpu : \"cpus = 30\", lowtime : \"time = 1.h\"\
    , midtime : \"time = 4.h\", hightime : \"time = 8.h\", veryhightime : \"time =\
    \ 24.h\" }\n"
  authors:
  - name: "Michaela Mueller"
    roles:
    - "maintainer"
    - "author"
    info:
      github: "mumichae"
      orcid: "0000-0002-1401-1785"
  - name: "Malte Luecken"
    roles:
    - "author"
    info:
      github: "LuckyMD"
      orcid: "0000-0001-7464-7921"
  - name: "Daniel Strobl"
    roles:
    - "author"
    info:
      github: "danielStrobl"
      orcid: "0000-0002-5516-7057"
  - name: "Robrecht Cannoodt"
    roles:
    - "contributor"
    info:
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
  - name: "Scott Gigante"
    roles:
    - "contributor"
    info:
      github: "scottgigante"
      orcid: "0000-0002-4544-2764"
  - name: "Kai Waldrant"
    roles:
    - "contributor"
    info:
      github: "KaiWaldrant"
      orcid: "0009-0003-8555-1361"
  - name: "Nartin Kim"
    roles:
    - "contributor"
    info:
      github: "martinkim0"
      orcid: "0009-0003-8555-1361"
  keywords:
  - "batch integration"
  - "scRNA-seq"
  license: "MIT"
  organization: "openproblems-bio"
  references:
    doi:
    - "10.1038/s41592-021-01336-8"
  links:
    repository: "https://github.com/openproblems-bio/task_batch_integration"
    docker_registry: "ghcr.io"
    issue_tracker: "https://github.com/openproblems-bio/task_batch_integration/issues"
